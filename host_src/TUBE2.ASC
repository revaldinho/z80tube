10  'Amstrad CPC-Acorn Tube Host Code
20  '(C) 2018 Hoglet, BigEd, Revaldinho
30 DIM A$(16)
40 MODE 2: INK 0,0 : INK 1,26 : BORDER 0
50 'GOSUB 1500 : 'Assemble with Maxam
60 OUT &FC16, 7  :'Select CPU
65 OUT &FC10,&7F :'Tube RESET all bits low
70 OUT &FC10,&AE :'Tube RESET set selected bits high
80 OUT &FC10,&20
90 WHILE 1=1
100    GOSUB 210
110   'PRINT HEX$(A,2);" ";
120   AA=A
130   GOSUB 1890
140   ON (AA+1) GOSUB 770, 740, 800, 740, 740,740, 740,740,740,740,970
150 WEND
160 END
170 'Wait on data from FIFO R1 
180 WHILE (INP(&FC10) AND &80)=0: WEND
190 A=INP(&FC11)
200 RETURN
210 'Get FIFO R2 without blocking FIFO R1 traffic
220 WHILE (INP(&FC12) AND &80)=0 
230   GOSUB 1890: 'CALL fifo1
240 WEND
250 A=INP(&FC13)
260 RETURN
270 'Get FIFO R3 without blocking FIFO R1 traffic
280 WHILE (INP(&FC14) AND &80)=0 
290   GOSUB 1890: 'CALL fifo1
300 WEND
310 A=INP(&FC15)
320 RETURN
330 'Get FIFO R4 without blocking FIFO R1 traffic
340 WHILE (INP(&FC16) AND &80)=0 
350   GOSUB 1890: 'CALL fifo1
360 WEND
370 A=INP(&FC17)
380 RETURN
390 'Write parameter T to FIFO R2 without blocking FIFO R1 traffic
400 WHILE (INP(&FC12) AND &40)=0 
410   GOSUB 1890: 'CALL fifo1
420 WEND
430 OUT (&FC13), T
440 RETURN
450 'Write parameter T to FIFO R3 without blocking FIFO R1 traffic
460 WHILE (INP(&FC14) AND &40)=0 
470   GOSUB 1890: 'CALL fifo1
480 WEND
490 OUT (&FC15), T
500 RETURN
510 'Write parameter T to FIFO R4 without blocking FIFO R1 traffic
520 WHILE (INP(&FC16) AND &40)=0 
530   GOSUB 1890: 'CALL fifo1
540 WEND
550 OUT (&FC17), T
560 RETURN
570 'Flush incoming FIFO R3
580 WHILE (INP(&FC14) AND &80)<>0 
590   A=INP(&FC15)
610 WEND
620 RETURN
630 'Delay by at least T us
640 N=TIME
650 WHILE TIME-N < T*0.0003 : WEND
660 RETURN
670 'Write string parameter T$ to FIFO R2, terminated with &0D
680 FOR i=1 TO LEN(T$)
690   T=ASC(MID$(T$,i,1)): GOSUB 390
700 NEXT
710 T=13 : GOSUB 390
720 RETURN
730 'DUMMY Destination for unhandled calls
740 PRINT "[Unhandled Trap]"
750 RETURN
760 'RDCH
770 PRINT "[RDCH]";
780 RETURN
790 'Read and report CLI string
800 'PRINT "[OSCLI]";
810 T$=""
820 WHILE A<> &D
830   GOSUB 210
840   IF A>31 THEN T$=T$+CHR$(A)
850 WEND
860 GOSUB 1060 : 'Tokenise the string
870 'PRINT "OSCLI Str ", A$(1)
880 IF A$(1)="LOAD" THEN GOTO 930
890 IF A$(1)="CAT" THEN CAT : GOTO 940
900 IF A$(1)="|B" THEN |B : GOTO 940
910 IF A$(1)="|A" THEN |A : GOTO 940
920 GOTO 940
930 GOSUB 1160
940 T=&7F : GOSUB 390
950 RETURN
960 'Read and handle OSWORD0
970 'PRINT "[OSWORD0]";
980 FOR B=1 TO 5
990   GOSUB 210
1000 NEXT
1010 T=&7F : GOSUB 390
1020 INPUT T$
1030 GOSUB 680
1040 RETURN
1050 'Tokenise string T$, max 16 words, return strings in A$()
1060 N=1
1070 A$(N)=""
1080 FOR L=1 TO LEN(T$)
1090   C$=MID$(T$,L,1)
1100   IF C$<>" " THEN A$(N)=A$(N)+C$: GOTO 1120
1110   N=N+1: A$(N)=""
1120 NEXT L
1130 WHILE I<16:A$(I)="":I=I+1:WEND
1140 RETURN
1150 ' LOAD <FILENAME> [ADDRESS:&1000] [WORDSIZE:&4]
1160 PRINT "Loading File ";A$(2);
1170 OPENIN A$(2)
1180 IF A$(3)=""THEN ADR=&1000 ELSE ADR=VAL("&"+A$(3))
1190 IF A$(4)=""THEN INC=4 ELSE INC=VAL(A$(4))
1200 TOTE=0
1205 DIG=0
1207 S=TIME
1210 WHILE NOT EOF
1220   LINE INPUT #9, H$
1230   IF LEFT$(H$,1)="#" THEN GOTO 1610
1232   OUT &FC10,&18
1233   OUT &FC10,&88
1240   T=&1 : GOSUB 510
1250   T=&AA : GOSUB 510
1260   T=&0 : GOSUB 510
1270   T=&0 : GOSUB 510
1280   T=INT(ADR/256) : GOSUB 510
1290   T=ADR AND &FF  : GOSUB 510
1300   T=&FF : GOSUB 510
1305   `wait for sync bit to be consumed
1310   WHILE (INP(&FC16) AND &40)=0: WEND
1320   FOR I=1 TO LEN(H$) STEP 2
1330     T=VAL("&"+MID$(H$,I,2)) : GOSUB 450
1350   NEXT I
1360   ' GOTO 1420 : 'Skip Readback 
1370   ' Read back data and correct errors
1380   GOSUB 570: 'Flush R3 FIFO first
1382   OUT &FC10,&18
1383   OUT &FC10,&86
1390   E=0 
1400   T=&0 : GOSUB 510
1410   T=&AA : GOSUB 510
1420   T=&0 : GOSUB 510
1430   T=&0 : GOSUB 510
1440   T=INT(ADR/256) : GOSUB 510
1450   T=ADR AND &FF  : GOSUB 510
1460   T=&FF : GOSUB 510
1465   `wait for sync bit to be consumed
1470   WHILE (INP(&FC16) AND &40)=0: WEND 
1480   FOR I=1 TO LEN(H$) STEP 2
1490     T=VAL("&"+MID$(H$,I,2))
1500     GOSUB 270
1510     IF A=T THEN GOTO 1550
1520     E=E+1
1530     PRINT "Error@adr=&";(HEX$(ADR+i/2,4)), "Exp.: &";HEX$(T,2);" Actual: &";HEX$(A,2)
1550   NEXT I
1560   IF E=0 THEN GOTO 1590
1570   TOTE=TOTE+E
1580   GOTO 1240
1590   PRINT ".";
1600   ADR=ADR+INT(LEN(H$)/(2*INC))
1605   DIG=DIG+INT(LEN(H$)/2)
1610 WEND
1620 CLOSEIN
1630 T=&5 : GOSUB 510
1640 T=&AA : GOSUB 510
1650 PRINT "DONE."
1652 PRINT "Transferred ";DIG;"bytes in ";(TIME-S)/300;"s"
1655 IF TOTE>0 THEN PRINT "Corrected ";TOTE;" errors"
1660 RETURN
1670 ' MAXAM Assembler for simple R1/R2 handling loop
1680 MEMORY HIMEM-128
1690 fifo1=HIMEM+1
1700 |ASSEMBLE
1710 '.top
1720 'LD B,&FC
1730 'LD C,&10
1740 'IN A,(C)
1750 'RET P
1760 'LD C,&11
1770 'IN A,(C)
1780 'PUSH AF
1790 'CALL &BB5A
1800 'POP AF
1810 'JR NZ, top
1820 'LD C,&13
1830 'LD A,&7F
1840 'OUT (C),A
1850 'JR top
1860 'END
1870 RETURN
1880 'FIFO1 Service loop
1890 IF (INP(&FC10) AND &80)=0 THEN RETURN
1900 A=INP(&FC11)
1910 IF A>0 THEN GOTO 1940
1920 T=&7F : GOSUB 390
1930 GOTO 1890
1940 IF A=12 OR A=16 THEN CLS : GOTO 1890: 'CLRTXT, CLRGFX
1950 IF A=18 THEN GOTO 2200: 'GCOL
1960 IF A=22 THEN GOTO 2250: 'MODE
1970 IF A=25 THEN GOTO 2020: 'PLOT
1980 IF A=29 THEN GOTO 2120: 'VDU29
1990 PRINT CHR$(A);
2000 'IF A > 31 THEN PRINT CHR$(A); ELSE PRINT "[";HEX$(A,2);"]";
2010 GOTO 1890
2020 'VDU_PLOT
2030 GOSUB 170 
2040 TYPE=A : GOSUB 170 
2050 X=A : GOSUB 170 
2060 X=X+256*A : GOSUB 170 
2070 Y=A : GOSUB 170
2080 Y=Y+256*A
2090 IF TYPE=4 THEN MOVE X,Y
2100 IF TYPE=5 THEN DRAW X,Y
2110 GOTO 1890
2120 'VDU29
2130 GOSUB 170
2140 X=A :GOSUB 170
2150 X=X+256*A :GOSUB 170
2160 Y=A :GOSUB 170
2170 Y=Y+256*A
2180 ORIGIN X,Y
2190 GOTO 1890
2200 'GCOL
2210 GOSUB 170
2220 C=A :GOSUB 170
2230 INK C,A
2240 GOTO 1890
2250 'MODE
2260 GOSUB 170
2270 IF A=0 OR A=3 THEN MODE 2
2280 IF A=1 OR A=4 OR A=6 OR A=7 THEN MODE 1
2290 IF A=2 OR A=5 THEN MODE 0
2300 GOTO 1890
2310 ' End of VDU Handling
