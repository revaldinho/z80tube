10  'Amstrad CPC-Acorn Tube Host Code
20  '(C) 2018 Hoglet, BigEd, Revaldinho
30 DEFINT A-Z
40 DEFREAL f
50 DIM A$(16)
60 ON ERROR GOTO 110
70 MODE 2: INK 0,0 : INK 1,26 : BORDER 0
80 MEMORY HIMEM-128
90 fifo1=HIMEM+1
100 'GOSUB 1500 : 'Assemble with Maxam
110 OUT &FC16, 7  :'Select CPU
120 OUT &FC10,&AE :'Tube RESET
130 OUT &FC10,&20
140 WHILE 1=1
150    GOSUB 200
160   'PRINT HEX$(A,2);" ";
170   ON (A+1) GOSUB 650, 620, 680, 620, 620,620, 620,620,620,620,850
180 WEND
190 END
191 'Wait on data from FIFO R1 
192 WHILE (INP(&FC10) AND &80)=0: WEND
193 A=INP(&FC11)
194 RETURN
200 'Get FIFO R2 without blocking FIFO R1 traffic
201 WHILE (INP(&FC12) AND &80)=0 
202   GOSUB 1690: 'CALL fifo1
203 WEND
204 A=INP(&FC13)
205 RETURN
210 'Get FIFO R3 without blocking FIFO R1 traffic
211 WHILE (INP(&FC14) AND &80)=0 
212   GOSUB 1690: 'CALL fifo1
213 WEND
214 A=INP(&FC15)
215 RETURN
220 'Get FIFO R4 without blocking FIFO R1 traffic
221 WHILE (INP(&FC16) AND &80)=0 
222   GOSUB 1690: 'CALL fifo1
223 WEND
224 A=INP(&FC17)
225 RETURN
240 'Write parameter T to FIFO R2 without blocking FIFO R1 traffic
241 WHILE (INP(&FC12) AND &40)=0 
242   GOSUB 1690: 'CALL fifo1
243 WEND
244 OUT (&FC13), T
245 RETURN
250 'Write parameter T to FIFO R3 without blocking FIFO R1 traffic
251 WHILE (INP(&FC14) AND &40)=0 
252   GOSUB 1690: 'CALL fifo1
253 WEND
254 OUT (&FC15), T
255 RETURN
260 'Write parameter T to FIFO R4 without blocking FIFO R1 traffic
261 WHILE (INP(&FC16) AND &40)=0 
262   GOSUB 1690: 'CALL fifo1
263 WEND
264 OUT (&FC17), T
265 RETURN
320 'Flush incoming FIFO R3
330 WHILE (INP(&FC14) AND &80)=1) 
340   A = INP(&FC15)
350 WEND
360 RETURN
550 'Write string parameter T$ to FIFO R2, terminated with &0D
560 FOR i=1 TO LEN(T$)
570   T=ASC(MID$(T$,i,1)): GOSUB 240
580 NEXT
590 T=13 : GOSUB 240
600 RETURN
610 'DUMMY Destination for unhandled calls
620 PRINT "[Unhandled Trap]"
630 RETURN
640 'RDCH
650 PRINT "[RDCH]";
660 RETURN
670 'Read and report CLI string
680 'PRINT "[OSCLI]";
690 T$=""
700 WHILE A<> &D
710   GOSUB 200
720   IF A>31 THEN T$=T$+CHR$(A)
730 WEND
740 GOSUB 940 : 'Tokenise the string
750 'PRINT "OSCLI Str ", A$(1)
760 IF A$(1)="LOAD" THEN GOTO 810
770 IF A$(1)="CAT" THEN CAT : GOTO 820
780 IF A$(1)="|B" THEN |B : GOTO 820
790 IF A$(1)="|A" THEN |A : GOTO 820
800 GOTO 820
810 GOSUB 1040
820 T=&7F : GOSUB 240
830 RETURN
840 'Read and handle OSWORD0
850 'PRINT "[OSWORD0]";
860 FOR B=1 TO 5
870   GOSUB 200
880 NEXT
890 T=&7F : GOSUB 240
900 INPUT T$
910 GOSUB 560
920 RETURN
930 'Tokenise string T$, max 16 words, return strings in A$()
940 N=1
950 A$(N)=""
960 FOR L=1 TO LEN(T$)
970   C$=MID$(T$,L,1)
980   IF C$<>" " THEN A$(N)=A$(N)+C$: GOTO 1000
990   N=N+1: A$(N)=""
1000 NEXT L
1010 WHILE I<16:A$(I)="":I=I+1:WEND
1020 RETURN
1030 ' LOAD <FILENAME> [ADDRESS:&1000] [WORDSIZE:&4]
1040 PRINT "Loading File ";A$(2);
1050 OPENIN A$(2)
1060 IF A$(3)=""THEN ADR=&1000 ELSE ADR=VAL("&"+A$(3))
1070 IF A$(4)=""THEN INC=4 ELSE INC=VAL(A$(4))
1080 TOTE=0
1090 WHILE NOT EOF
1100   LINE INPUT #9, H$
1110   IF LEFT$(H$,1)="#" THEN GOTO 1440
1120   T=&1 : GOSUB 260
1130   T=&AA : GOSUB 260
1140   T=&0 : GOSUB 260
1150   T=&0 : GOSUB 260
1160   T=INT(ADR/256) : GOSUB 260
1170   T=ADR AND &FF  : GOSUB 260
1180   T=&FF : GOSUB 260
1190   FOR I=1 TO LEN(H$) STEP 2
1200     T=VAL("&"+MID$(H$,I,2)) : GOSUB 250
1210   NEXT I
1215   GOTO 1420 : 'Skip Readback 
1220   ' Read back data and correct errors
1240   E=0 
1250   T=&0 : GOSUB 260
1260   T=&AA : GOSUB 260
1270   T=&0 : GOSUB 260
1280   T=&0 : GOSUB 260
1290   T=INT(ADR/256) : GOSUB 260
1300   T=ADR AND &FF  : GOSUB 260
1310   T=&FF : GOSUB 260
1320   FOR I=1 TO LEN(H$) STEP 2
1330     T=VAL("&"+MID$(H$,I,2))
1340     GOSUB 210
1350     IF A=T THEN GOTO 1380
1360     E = E+1
1370     PRINT "Error at line adr=";(HEX$(ADR,6)); "Exp.: ";HEX$(T,2);" Actual: ";HEX$(A,2)
1380   NEXT I
1390   IF E=0 THEN GOTO 1420
1400   TOTE=TOTE+E
1410   GOTO 1120
1420   PRINT ".";
1430   ADR=ADR+INT(LEN(H$)/(2*INC))
1440 WEND
1450 CLOSEIN
1460 T=&5 : GOSUB 260
1470 T=&AA : GOSUB 260
1480 IF TOTE>0 THEN PRINT "DONE (corrected ";TOTE;" errors)" ELSE PRINT "DONE"
1490 RETURN
1500 |ASSEMBLE
1510 '.top
1520 'LD B,&FC
1530 'LD C,&10
1540 'IN A,(C)
1550 'RET P
1560 'LD C,&11
1570 'IN A,(C)
1580 'PUSH AF
1590 'CALL &BB5A
1600 'POP AF
1610 'JR NZ, top
1620 'LD C,&13
1630 'LD A,&7F
1640 'OUT (C),A
1650 'JR top
1660 'END
1670 RETURN
1680 'FIFO1 Service loop
1690 IF (INP(&FC10) AND &80)=0 THEN RETURN
1700 A = INP(&FC11)
1710 IF A>0 THEN GOTO 1740
1720 T = &7F : GOSUB 240
1730 GOTO 1690
1740 IF A=12 OR A=16 THEN CLS : GOTO 1690: 'CLRTXT, CLRGFX
1750 IF A=18 THEN GOTO 2010: 'GCOL
1760 IF A=22 THEN GOTO 2100: 'MODE
1770 IF A=25 THEN GOTO 1800: 'PLOT
1780 IF A=29 THEN GOTO 1930: 'VDU29
1782 PRINT CHR$(A);
1785 'IF A > 31 THEN PRINT CHR$(A); ELSE PRINT "[";HEX$(A,2);"]";
1790 GOTO 1690
1800 'VDU_PLOT
1810 GOSUB 191 
1820 TYPE=A : GOSUB 191 
1830 X=A : GOSUB 191 
1840 X=X+256*A : GOSUB 191 
1850 Y=A : GOSUB 191
1860 Y=Y+256*A
1870 IF TYPE=4 THEN MOVE X,Y
1880 IF TYPE=5 THEN DRAW X,Y
1890 GOTO 1690
1930 'VDU29
1940 GOSUB 191
1950 X=A :GOSUB 191
1960 X=X+256*A :GOSUB 191
1970 Y=A :GOSUB 191
1980 Y=Y+256*A
1990 ORIGIN X,Y
2000 GOTO 1690
2010 'GCOL
2020 GOSUB 191
2030 C=A :GOSUB 191
2040 INK C,A
2050 GOTO 1690
2100 'MODE
2110 GOSUB 191
2120 IF A=0 OR A=3 THEN MODE 2
2130 IF A=1 OR A=4 OR A=6 OR A=7 THEN MODE 1
2140 IF A=2 OR A=5 THEN MODE 0
2150 GOTO 1690
2160 ' End of VDU Handling

